{"schemaVersion":{"patch":0,"minor":2,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The various operators defined as extensions on ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" implement their functionality as","type":"text"},{"text":" ","type":"text"},{"text":"classes or structures that extend this enumeration. For example, the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","type":"reference","isActive":true},{"text":" operator","type":"text"},{"text":" ","type":"text"},{"text":"returns a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","type":"reference","isActive":true},{"text":" parser.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/parsing\/parsers"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"metadata":{"role":"symbol","modules":[{"name":"Parsing"}],"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"roleHeading":"Enumeration","title":"Parsers","symbolKind":"enum","externalID":"s:7Parsing7ParsersO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}]},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","interfaceLanguage":"swift"},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","role":"collection","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/End":{"abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","url":"\/documentation\/parsing\/parsers\/end","type":"topic","title":"Parsers.End"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatMap","kind":"identifier"}],"title":"Parsers.FlatMap","type":"topic","abstract":[{"text":"A parser that transforms the output of another parser into a new parser.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/flatmap","navigatorTitle":[{"text":"FlatMap","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/First":{"url":"\/documentation\/parsing\/parsers\/first","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"First","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","title":"Parsers.First","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Prefix":{"url":"\/documentation\/parsing\/parsers\/prefix","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","title":"Parsers.Prefix","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Filter"}],"title":"Parsers.Filter","type":"topic","abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/filter","navigatorTitle":[{"kind":"identifier","text":"Filter"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Fail":{"url":"\/documentation\/parsing\/parsers\/fail","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","title":"Parsers.Fail","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Rest":{"title":"Parsers.Rest","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","kind":"symbol","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"abstract":[],"url":"\/documentation\/parsing\/parsers\/rest","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","url":"\/documentation\/parsing\/parsers\/intparser","kind":"symbol","title":"Parsers.IntParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IntParser"}],"abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"code":"+","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"-","type":"codeVoice"},{"type":"text","text":" sign) from the"},{"type":"text","text":" "},{"type":"text","text":"beginning of a collection of UTF8 code units."}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","url":"\/documentation\/parsing\/parsers\/floatparser","type":"topic","abstract":[{"text":"A parser that consumes a float from the beginning of a collection of UTF-8 code units.","type":"text"}],"role":"symbol","title":"Parsers.FloatParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatParser","kind":"identifier"}],"navigatorTitle":[{"text":"FloatParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/AnyParser":{"url":"\/documentation\/parsing\/parsers\/anyparser","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","title":"Parsers.AnyParser","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixThrough":{"navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"title":"Parsers.PrefixThrough","role":"symbol","url":"\/documentation\/parsing\/parsers\/prefixthrough","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"navigatorTitle":[{"kind":"identifier","text":"BoolParser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers\/boolparser","abstract":[{"text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units.","type":"text"}],"type":"topic","title":"Parsers.BoolParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoolParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parser\/map(_:)","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"type":"topic","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Newline":{"type":"topic","url":"\/documentation\/parsing\/parsers\/newline","navigatorTitle":[{"text":"Newline","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"title":"Parsers.Newline","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixUpTo":{"url":"\/documentation\/parsing\/parsers\/prefixupto","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","title":"Parsers.PrefixUpTo","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Float80Parser":{"url":"\/documentation\/parsing\/parsers\/float80parser","title":"Parsers.Float80Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Float80Parser","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"A parser that consumes a float from the beginning of a collection of UTF-8 code units.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Float80Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Always":{"url":"\/documentation\/parsing\/parsers\/always","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Always","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","title":"Parsers.Always","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"kind":"symbol","role":"symbol","title":"Parsers.Pullback","url":"\/documentation\/parsing\/parsers\/pullback","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"navigatorTitle":[{"text":"Pullback","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","type":"topic","abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a downstream parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","kind":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers\/replaceerror","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"type":"topic","title":"Parsers.ReplaceError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Skip":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"title":"Parsers.Skip","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","url":"\/documentation\/parsing\/parsers\/skip","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/conditional","role":"symbol","title":"Parsers.Conditional","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","url":"\/documentation\/parsing\/parsers\/compactmap","navigatorTitle":[{"text":"CompactMap","kind":"identifier"}],"title":"Parsers.CompactMap","abstract":[{"text":"A parser that outputs the non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" result of calling the given transformation with the output","type":"text"},{"text":" ","type":"text"},{"text":"of its upstream parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CompactMap","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","title":"Parsers.Pipe","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"url":"\/documentation\/parsing\/parsers\/pipe"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"url":"\/documentation\/parsing\/parsers\/optionalvoid","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}],"title":"Parsers.OptionalVoid","abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"navigatorTitle":[{"text":"OptionalVoid","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Whitespace":{"url":"\/documentation\/parsing\/parsers\/whitespace","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace","title":"Parsers.Whitespace","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/DoubleParser":{"navigatorTitle":[{"text":"DoubleParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DoubleParser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/doubleparser","abstract":[{"type":"text","text":"A parser that consumes a double from the beginning of a collection of UTF-8 code units."}],"title":"Parsers.DoubleParser","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/StartsWith":{"url":"\/documentation\/parsing\/parsers\/startswith","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","title":"Parsers.StartsWith","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"url":"\/documentation\/parsing\/parsers\/map","navigatorTitle":[{"kind":"identifier","text":"Map"}],"title":"Parsers.Map","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"A parser that transforms the output of another parser with a given closure.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Many":{"url":"\/documentation\/parsing\/parsers\/many","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","title":"Parsers.Many","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","url":"\/documentation\/parsing\/parsers\/oneofmany","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"kind":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}],"role":"symbol","type":"topic","title":"Parsers.OneOfMany"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Lazy":{"url":"\/documentation\/parsing\/parsers\/lazy","role":"symbol","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","title":"Parsers.Lazy","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","title":"Parsers","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"role":"symbol","abstract":[],"title":"Parsers.Stream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/parsing\/parsers\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UUIDParser"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UUIDParser"}],"abstract":[{"type":"text","text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units."}],"url":"\/documentation\/parsing\/parsers\/uuidparser","title":"Parsers.UUIDParser"}}}