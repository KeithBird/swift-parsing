{"metadata":{"externalID":"s:7Parsing10StartsWithV14possiblePrefixs13AnyCollectionVy7ElementQzGvp","symbolKind":"property","role":"symbol","roleHeading":"Instance Property","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"possiblePrefix","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyCollection","preciseIdentifier":"s:s13AnyCollectionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"title":"possiblePrefix","modules":[{"name":"Parsing"}]},"variants":[{"paths":["\/documentation\/parsing\/startswith\/possibleprefix"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"No overview available."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"possiblePrefix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s13AnyCollectionV","text":"AnyCollection"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}]}]}],"kind":"symbol","schemaVersion":{"minor":2,"major":0,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/possiblePrefix"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/possiblePrefix":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/possiblePrefix","url":"\/documentation\/parsing\/startswith\/possibleprefix","type":"topic","title":"possiblePrefix","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"possiblePrefix","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyCollection","preciseIdentifier":"s:s13AnyCollectionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","role":"collection","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","kind":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/startswith","abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"type":"topic","title":"StartsWith","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}]}}}