{"metadata":{"role":"symbol","symbolKind":"method","externalID":"s:7Parsing12OneOfBuilderO11buildEither5firstAA7ParsersO11ConditionalOy_xq_Gx_tAA6ParserRzAaKR_5InputQy_ALRtz6OutputQy_AORtzr0_lFZ","title":"buildEither(first:)","modules":[{"name":"Parsing"}],"roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildEither"},{"text":"<","kind":"text"},{"text":"TrueParser","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"first","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO11ConditionalO","text":"Conditional","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/buildEither(first:)"},"schemaVersion":{"major":0,"minor":2,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder"]]},"abstract":[{"type":"text","text":"Provides support for "},{"code":"if","type":"codeVoice"},{"type":"text","text":"-"},{"code":"else","type":"codeVoice"},{"type":"text","text":" statements in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder"},{"type":"text","text":" blocks, producing a"},{"type":"text","text":" "},{"type":"text","text":"conditional parser for the "},{"code":"if","type":"codeVoice"},{"type":"text","text":" branch."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/oneofbuilder\/buildeither(first:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"text":"<","kind":"text"},{"text":"TrueParser","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"first","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parser","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Conditional","preciseIdentifier":"s:7Parsing7ParsersO11ConditionalO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"code":["OneOf {","  if useLegacyParser {","    LegacyParser()","  } else {","    NewParser()","  }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","kind":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder":{"title":"OneOfBuilder","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs each parser in the closure, one after another, till one succeeds with an output.","type":"text"}],"url":"\/documentation\/parsing\/oneofbuilder","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder","role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"OneOfBuilder","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","title":"Parsers","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/conditional","role":"symbol","title":"Parsers.Conditional","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/buildEither(first:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/buildEither(first:)","url":"\/documentation\/parsing\/oneofbuilder\/buildeither(first:)","role":"symbol","title":"buildEither(first:)","abstract":[{"type":"text","text":"Provides support for "},{"code":"if","type":"codeVoice"},{"type":"text","text":"-"},{"code":"else","type":"codeVoice"},{"type":"text","text":" statements in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder"},{"type":"text","text":" blocks, producing a"},{"type":"text","text":" "},{"type":"text","text":"conditional parser for the "},{"type":"codeVoice","code":"if"},{"type":"text","text":" branch."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildEither","kind":"identifier"},{"text":"<","kind":"text"},{"text":"TrueParser","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"first","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Conditional","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO11ConditionalO"},{"text":"<","kind":"text"},{"text":"TrueParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"FalseParser","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOf"}],"url":"\/documentation\/parsing\/oneof","navigatorTitle":[{"kind":"identifier","text":"OneOf"}],"title":"OneOf","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","role":"collection","url":"\/documentation\/parsing"}}}