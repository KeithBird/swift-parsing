{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"() "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4UTF8a","text":"UTF8"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita","text":"CodeUnit"}]}],"kind":"declarations"}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init()-3zv88","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Initializer","extendedModule":"Parsing","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", "},{"type":"codeVoice","code":"Bytes"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Bytes"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bytes.SubSequence"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Bytes.Element"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"modules":[{"name":"Parsing"}],"symbolKind":"init","externalID":"s:7Parsing10WhitespaceVACyxxGycq_Rsz11SubSequenceQzRs_s5UInt8V7ElementRtzrlufc","title":"init()"},"variants":[{"paths":["\/documentation\/parsing\/whitespace\/init()-3zv88"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"]]},"schemaVersion":{"patch":0,"minor":2,"major":0},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/init()-3zv88":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Bytes","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Bytes"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bytes.SubSequence"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Bytes.Element"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"text":".","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"kind":"symbol","title":"init()","type":"topic","url":"\/documentation\/parsing\/whitespace\/init()-3zv88","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init()-3zv88","abstract":[],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","role":"collection","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","kind":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"type":"text","text":"A parser that consumes all ASCII whitespace from the beginning of the input."}],"title":"Whitespace","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"url":"\/documentation\/parsing\/whitespace"}}}