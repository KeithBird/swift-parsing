{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser\/pipe(_:)"},"variants":[{"paths":["\/documentation\/parsing\/parsers\/floatparser\/pipe(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"Parsing","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pipe","preciseIdentifier":"s:7Parsing7ParsersO4PipeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7Parsing6ParserPAAE4pipeyAA7ParsersO4PipeVy_xqd__Gqd__yXEAaBRd__5InputQyd__6OutputRtzlF::SYNTHESIZED::s:7Parsing7ParsersO11FloatParserV","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Parsing"}],"title":"pipe(_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"build"},{"text":": () -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"text":"Pipe","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO4PipeV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"A parser that pipes this parserâ€™s output into another parser.  @inlinable","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"downstream","content":[{"inlineContent":[{"type":"text","text":"A parser that parses the output of this parser."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"For example, we can try to parse an integer of exactly 4 digits by piping the output of"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","isActive":true},{"type":"text","text":" into an "},{"code":"Int.parser()","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","code":["let year = Prefix(4).pipe { Int.parser() }","","try year.parse(\"2022\")  \/\/ 2022","try year.parse(\"0123\")  \/\/ 123"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This parser fails if either the upstream or downstream parser fails. For example:"}],"type":"paragraph"},{"syntax":"swift","code":["try year.parse(\"123\")","\/\/ error: unexpected input","\/\/  --> input:1:4","\/\/ 1 | 123","\/\/   |    ^ expected 1 more element","","try year.parse(\"fail!\")","\/\/ error: unexpected input","\/\/  --> input:1:1-4","\/\/ 1 | fail!","\/\/   | ^^^^ pipe: expected integer"],"type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser\/Parser-Implementations"]]},"schemaVersion":{"patch":0,"minor":2,"major":0},"sections":[],"abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","title":"Parsers","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser/pipe(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser\/pipe(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pipe","preciseIdentifier":"s:7Parsing7ParsersO4PipeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"url":"\/documentation\/parsing\/parsers\/floatparser\/pipe(_:)","title":"pipe(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","title":"Prefix","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"url":"\/documentation\/parsing\/prefix"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser/Parser-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser\/Parser-Implementations","url":"\/documentation\/parsing\/parsers\/floatparser\/parser-implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","url":"\/documentation\/parsing\/parsers\/floatparser","type":"topic","abstract":[{"text":"A parser that consumes a float from the beginning of a collection of UTF-8 code units.","type":"text"}],"role":"symbol","title":"Parsers.FloatParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatParser","kind":"identifier"}],"navigatorTitle":[{"text":"FloatParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","role":"collection","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","kind":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"title":"Parser","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","title":"Parsers.Pipe","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"url":"\/documentation\/parsing\/parsers\/pipe"}}}